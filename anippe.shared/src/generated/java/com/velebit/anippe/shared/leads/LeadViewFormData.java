package com.velebit.anippe.shared.leads;

import com.velebit.anippe.shared.components.AbstractDocumentsGroupBoxData;
import com.velebit.anippe.shared.reminders.AbstractRemindersGroupBoxData;
import com.velebit.anippe.shared.tasks.AbstractTasksGroupBoxData;
import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

import javax.annotation.Generated;
import java.util.Date;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "com.velebit.anippe.client.leads.LeadViewForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class LeadViewFormData extends AbstractFormData {
    private static final long serialVersionUID = 1L;

    public ActivityTable getActivityTable() {
        return getFieldByClass(ActivityTable.class);
    }

    public DocumentsBox getDocumentsBox() {
        return getFieldByClass(DocumentsBox.class);
    }

    /**
     * access method for property LeadId.
     */
    public Integer getLeadId() {
        return getLeadIdProperty().getValue();
    }

    /**
     * access method for property LeadId.
     */
    public void setLeadId(Integer leadId) {
        getLeadIdProperty().setValue(leadId);
    }

    public LeadIdProperty getLeadIdProperty() {
        return getPropertyByClass(LeadIdProperty.class);
    }

    /**
     * access method for property Lost.
     */
    public boolean isLost() {
        return getLostProperty().getValue() == null ? false : getLostProperty().getValue();
    }

    /**
     * access method for property Lost.
     */
    public void setLost(boolean lost) {
        getLostProperty().setValue(lost);
    }

    public LostProperty getLostProperty() {
        return getPropertyByClass(LostProperty.class);
    }

    public RemindersBox getRemindersBox() {
        return getFieldByClass(RemindersBox.class);
    }

    public TasksBox getTasksBox() {
        return getFieldByClass(TasksBox.class);
    }

    public static class ActivityTable extends AbstractTableFieldBeanData {
        private static final long serialVersionUID = 1L;

        @Override
        public ActivityTableRowData addRow() {
            return (ActivityTableRowData) super.addRow();
        }

        @Override
        public ActivityTableRowData addRow(int rowState) {
            return (ActivityTableRowData) super.addRow(rowState);
        }

        @Override
        public ActivityTableRowData createRow() {
            return new ActivityTableRowData();
        }

        @Override
        public Class<? extends AbstractTableRowData> getRowType() {
            return ActivityTableRowData.class;
        }

        @Override
        public ActivityTableRowData[] getRows() {
            return (ActivityTableRowData[]) super.getRows();
        }

        @Override
        public ActivityTableRowData rowAt(int index) {
            return (ActivityTableRowData) super.rowAt(index);
        }

        public void setRows(ActivityTableRowData[] rows) {
            super.setRows(rows);
        }

        public static class ActivityTableRowData extends AbstractTableRowData {
            private static final long serialVersionUID = 1L;
            public static final String activityLogId = "activityLogId";
            public static final String content = "content";
            public static final String createdAt = "createdAt";
            public static final String user = "user";
            private Integer m_activityLogId;
            private String m_content;
            private Date m_createdAt;
            private String m_user;

            public Integer getActivityLogId() {
                return m_activityLogId;
            }

            public void setActivityLogId(Integer newActivityLogId) {
                m_activityLogId = newActivityLogId;
            }

            public String getContent() {
                return m_content;
            }

            public void setContent(String newContent) {
                m_content = newContent;
            }

            public Date getCreatedAt() {
                return m_createdAt;
            }

            public void setCreatedAt(Date newCreatedAt) {
                m_createdAt = newCreatedAt;
            }

            public String getUser() {
                return m_user;
            }

            public void setUser(String newUser) {
                m_user = newUser;
            }
        }
    }

    public static class DocumentsBox extends AbstractDocumentsGroupBoxData {
        private static final long serialVersionUID = 1L;
    }

    public static class LeadIdProperty extends AbstractPropertyData<Integer> {
        private static final long serialVersionUID = 1L;
    }

    public static class LostProperty extends AbstractPropertyData<Boolean> {
        private static final long serialVersionUID = 1L;
    }

    public static class RemindersBox extends AbstractRemindersGroupBoxData {
        private static final long serialVersionUID = 1L;
    }

    public static class TasksBox extends AbstractTasksGroupBoxData {
        private static final long serialVersionUID = 1L;
    }
}
