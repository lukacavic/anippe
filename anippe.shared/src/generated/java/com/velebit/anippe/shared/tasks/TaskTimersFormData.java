package com.velebit.anippe.shared.tasks;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

import javax.annotation.Generated;
import java.util.Date;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "com.velebit.anippe.client.tasks.TaskTimersForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class TaskTimersFormData extends AbstractFormData {
    private static final long serialVersionUID = 1L;

    /**
     * access method for property TaskId.
     */
    public Integer getTaskId() {
        return getTaskIdProperty().getValue();
    }

    /**
     * access method for property TaskId.
     */
    public void setTaskId(Integer taskId) {
        getTaskIdProperty().setValue(taskId);
    }

    public TaskIdProperty getTaskIdProperty() {
        return getPropertyByClass(TaskIdProperty.class);
    }

    public TaskTimersTable getTaskTimersTable() {
        return getFieldByClass(TaskTimersTable.class);
    }

    public static class TaskIdProperty extends AbstractPropertyData<Integer> {
        private static final long serialVersionUID = 1L;
    }

    public static class TaskTimersTable extends AbstractTableFieldBeanData {
        private static final long serialVersionUID = 1L;

        @Override
        public TaskTimersTableRowData addRow() {
            return (TaskTimersTableRowData) super.addRow();
        }

        @Override
        public TaskTimersTableRowData addRow(int rowState) {
            return (TaskTimersTableRowData) super.addRow(rowState);
        }

        @Override
        public TaskTimersTableRowData createRow() {
            return new TaskTimersTableRowData();
        }

        @Override
        public Class<? extends AbstractTableRowData> getRowType() {
            return TaskTimersTableRowData.class;
        }

        @Override
        public TaskTimersTableRowData[] getRows() {
            return (TaskTimersTableRowData[]) super.getRows();
        }

        @Override
        public TaskTimersTableRowData rowAt(int index) {
            return (TaskTimersTableRowData) super.rowAt(index);
        }

        public void setRows(TaskTimersTableRowData[] rows) {
            super.setRows(rows);
        }

        public static class TaskTimersTableRowData extends AbstractTableRowData {
            private static final long serialVersionUID = 1L;
            public static final String timerId = "timerId";
            public static final String user = "user";
            public static final String startAt = "startAt";
            public static final String endAt = "endAt";
            public static final String totalTime = "totalTime";
            private Integer m_timerId;
            private String m_user;
            private Date m_startAt;
            private Date m_endAt;
            private String m_totalTime;

            public Integer getTimerId() {
                return m_timerId;
            }

            public void setTimerId(Integer newTimerId) {
                m_timerId = newTimerId;
            }

            public String getUser() {
                return m_user;
            }

            public void setUser(String newUser) {
                m_user = newUser;
            }

            public Date getStartAt() {
                return m_startAt;
            }

            public void setStartAt(Date newStartAt) {
                m_startAt = newStartAt;
            }

            public Date getEndAt() {
                return m_endAt;
            }

            public void setEndAt(Date newEndAt) {
                m_endAt = newEndAt;
            }

            public String getTotalTime() {
                return m_totalTime;
            }

            public void setTotalTime(String newTotalTime) {
                m_totalTime = newTotalTime;
            }
        }
    }
}
