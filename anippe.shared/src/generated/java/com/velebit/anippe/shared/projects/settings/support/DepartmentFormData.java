package com.velebit.anippe.shared.projects.settings.support;

import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

import javax.annotation.Generated;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "com.velebit.anippe.client.projects.settings.support.DepartmentForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class DepartmentFormData extends AbstractFormData {
    private static final long serialVersionUID = 1L;

    public Active getActive() {
        return getFieldByClass(Active.class);
    }

    public DeleteAfterImport getDeleteAfterImport() {
        return getFieldByClass(DeleteAfterImport.class);
    }

    /**
     * access method for property DepartmentId.
     */
    public Integer getDepartmentId() {
        return getDepartmentIdProperty().getValue();
    }

    /**
     * access method for property DepartmentId.
     */
    public void setDepartmentId(Integer departmentId) {
        getDepartmentIdProperty().setValue(departmentId);
    }

    public DepartmentIdProperty getDepartmentIdProperty() {
        return getPropertyByClass(DepartmentIdProperty.class);
    }

    public EmailImapEmail getEmailImapEmail() {
        return getFieldByClass(EmailImapEmail.class);
    }

    public EmailImapEnabled getEmailImapEnabled() {
        return getFieldByClass(EmailImapEnabled.class);
    }

    public EmailImapEncryptionGroup getEmailImapEncryptionGroup() {
        return getFieldByClass(EmailImapEncryptionGroup.class);
    }

    public EmailImapHost getEmailImapHost() {
        return getFieldByClass(EmailImapHost.class);
    }

    public EmailImapPassword getEmailImapPassword() {
        return getFieldByClass(EmailImapPassword.class);
    }

    public Folders getFolders() {
        return getFieldByClass(Folders.class);
    }

    public Name getName() {
        return getFieldByClass(Name.class);
    }

    /**
     * access method for property ProjectId.
     */
    public Integer getProjectId() {
        return getProjectIdProperty().getValue();
    }

    /**
     * access method for property ProjectId.
     */
    public void setProjectId(Integer projectId) {
        getProjectIdProperty().setValue(projectId);
    }

    public ProjectIdProperty getProjectIdProperty() {
        return getPropertyByClass(ProjectIdProperty.class);
    }

    public static class Active extends AbstractValueFieldData<Boolean> {
        private static final long serialVersionUID = 1L;
    }

    public static class DeleteAfterImport extends AbstractValueFieldData<Boolean> {
        private static final long serialVersionUID = 1L;
    }

    public static class DepartmentIdProperty extends AbstractPropertyData<Integer> {
        private static final long serialVersionUID = 1L;
    }

    public static class EmailImapEmail extends AbstractValueFieldData<String> {
        private static final long serialVersionUID = 1L;
    }

    public static class EmailImapEnabled extends AbstractValueFieldData<Boolean> {
        private static final long serialVersionUID = 1L;
    }

    public static class EmailImapEncryptionGroup extends AbstractValueFieldData<String> {
        private static final long serialVersionUID = 1L;
    }

    public static class EmailImapHost extends AbstractValueFieldData<String> {
        private static final long serialVersionUID = 1L;
    }

    public static class EmailImapPassword extends AbstractValueFieldData<String> {
        private static final long serialVersionUID = 1L;
    }

    public static class Folders extends AbstractValueFieldData<String> {
        private static final long serialVersionUID = 1L;
    }

    public static class Name extends AbstractValueFieldData<String> {
        private static final long serialVersionUID = 1L;
    }

    public static class ProjectIdProperty extends AbstractPropertyData<Integer> {
        private static final long serialVersionUID = 1L;
    }
}
