package com.velebit.anippe.shared.reminders;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

import javax.annotation.Generated;
import java.util.Date;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "com.velebit.anippe.client.reminders.RemindersForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class RemindersFormData extends AbstractFormData {
    private static final long serialVersionUID = 1L;

    /**
     * access method for property RelatedId.
     */
    public Integer getRelatedId() {
        return getRelatedIdProperty().getValue();
    }

    /**
     * access method for property RelatedId.
     */
    public void setRelatedId(Integer relatedId) {
        getRelatedIdProperty().setValue(relatedId);
    }

    public RelatedIdProperty getRelatedIdProperty() {
        return getPropertyByClass(RelatedIdProperty.class);
    }

    /**
     * access method for property RelatedType.
     */
    public Integer getRelatedType() {
        return getRelatedTypeProperty().getValue();
    }

    /**
     * access method for property RelatedType.
     */
    public void setRelatedType(Integer relatedType) {
        getRelatedTypeProperty().setValue(relatedType);
    }

    public RelatedTypeProperty getRelatedTypeProperty() {
        return getPropertyByClass(RelatedTypeProperty.class);
    }

    public RemindersTable getRemindersTable() {
        return getFieldByClass(RemindersTable.class);
    }

    public static class RelatedIdProperty extends AbstractPropertyData<Integer> {
        private static final long serialVersionUID = 1L;
    }

    public static class RelatedTypeProperty extends AbstractPropertyData<Integer> {
        private static final long serialVersionUID = 1L;
    }

    public static class RemindersTable extends AbstractTableFieldBeanData {
        private static final long serialVersionUID = 1L;

        @Override
        public RemindersTableRowData addRow() {
            return (RemindersTableRowData) super.addRow();
        }

        @Override
        public RemindersTableRowData addRow(int rowState) {
            return (RemindersTableRowData) super.addRow(rowState);
        }

        @Override
        public RemindersTableRowData createRow() {
            return new RemindersTableRowData();
        }

        @Override
        public Class<? extends AbstractTableRowData> getRowType() {
            return RemindersTableRowData.class;
        }

        @Override
        public RemindersTableRowData[] getRows() {
            return (RemindersTableRowData[]) super.getRows();
        }

        @Override
        public RemindersTableRowData rowAt(int index) {
            return (RemindersTableRowData) super.rowAt(index);
        }

        public void setRows(RemindersTableRowData[] rows) {
            super.setRows(rows);
        }

        public static class RemindersTableRowData extends AbstractTableRowData {
            private static final long serialVersionUID = 1L;
            public static final String description = "description";
            public static final String reminderAt = "reminderAt";
            public static final String isReminded = "isReminded";
            private String m_description;
            private Date m_reminderAt;
            private Boolean m_isReminded;

            public String getDescription() {
                return m_description;
            }

            public void setDescription(String newDescription) {
                m_description = newDescription;
            }

            public Date getReminderAt() {
                return m_reminderAt;
            }

            public void setReminderAt(Date newReminderAt) {
                m_reminderAt = newReminderAt;
            }

            public Boolean getIsReminded() {
                return m_isReminded;
            }

            public void setIsReminded(Boolean newIsReminded) {
                m_isReminded = newIsReminded;
            }
        }
    }
}
