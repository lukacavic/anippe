package com.velebit.anippe.shared.email;

import org.eclipse.scout.rt.platform.resource.BinaryResource;
import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

import javax.annotation.Generated;
import java.util.List;
import java.util.Set;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "com.velebit.anippe.client.email.EmailForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class EmailFormData extends AbstractFormData {
    private static final long serialVersionUID = 1L;

    /**
     * access method for property Attachments.
     */
    public List<BinaryResource> getAttachments() {
        return getAttachmentsProperty().getValue();
    }

    /**
     * access method for property Attachments.
     */
    public void setAttachments(List<BinaryResource> attachments) {
        getAttachmentsProperty().setValue(attachments);
    }

    public AttachmentsProperty getAttachmentsProperty() {
        return getPropertyByClass(AttachmentsProperty.class);
    }

    public AttachmentsTable getAttachmentsTable() {
        return getFieldByClass(AttachmentsTable.class);
    }

    public BCC getBCC() {
        return getFieldByClass(BCC.class);
    }

    public CC getCC() {
        return getFieldByClass(CC.class);
    }

    /**
     * access method for property ClientId.
     */
    public Integer getClientId() {
        return getClientIdProperty().getValue();
    }

    /**
     * access method for property ClientId.
     */
    public void setClientId(Integer clientId) {
        getClientIdProperty().setValue(clientId);
    }

    public ClientIdProperty getClientIdProperty() {
        return getPropertyByClass(ClientIdProperty.class);
    }

    /**
     * access method for property EmailId.
     */
    public Integer getEmailId() {
        return getEmailIdProperty().getValue();
    }

    /**
     * access method for property EmailId.
     */
    public void setEmailId(Integer emailId) {
        getEmailIdProperty().setValue(emailId);
    }

    public EmailIdProperty getEmailIdProperty() {
        return getPropertyByClass(EmailIdProperty.class);
    }

    public Message getMessage() {
        return getFieldByClass(Message.class);
    }

    public Receiver getReceiver() {
        return getFieldByClass(Receiver.class);
    }

    public Sender getSender() {
        return getFieldByClass(Sender.class);
    }

    public Subject getSubject() {
        return getFieldByClass(Subject.class);
    }

    public static class AttachmentsProperty extends AbstractPropertyData<List<BinaryResource>> {
        private static final long serialVersionUID = 1L;
    }

    public static class AttachmentsTable extends AbstractTableFieldBeanData {
        private static final long serialVersionUID = 1L;

        @Override
        public AttachmentsTableRowData addRow() {
            return (AttachmentsTableRowData) super.addRow();
        }

        @Override
        public AttachmentsTableRowData addRow(int rowState) {
            return (AttachmentsTableRowData) super.addRow(rowState);
        }

        @Override
        public AttachmentsTableRowData createRow() {
            return new AttachmentsTableRowData();
        }

        @Override
        public Class<? extends AbstractTableRowData> getRowType() {
            return AttachmentsTableRowData.class;
        }

        @Override
        public AttachmentsTableRowData[] getRows() {
            return (AttachmentsTableRowData[]) super.getRows();
        }

        @Override
        public AttachmentsTableRowData rowAt(int index) {
            return (AttachmentsTableRowData) super.rowAt(index);
        }

        public void setRows(AttachmentsTableRowData[] rows) {
            super.setRows(rows);
        }

        public static class AttachmentsTableRowData extends AbstractTableRowData {
            private static final long serialVersionUID = 1L;
            public static final String attachment = "attachment";
            public static final String name = "name";
            public static final String extension = "extension";
            public static final String size = "size";
            private BinaryResource m_attachment;
            private String m_name;
            private String m_extension;
            private Integer m_size;

            public BinaryResource getAttachment() {
                return m_attachment;
            }

            public void setAttachment(BinaryResource newAttachment) {
                m_attachment = newAttachment;
            }

            public String getName() {
                return m_name;
            }

            public void setName(String newName) {
                m_name = newName;
            }

            public String getExtension() {
                return m_extension;
            }

            public void setExtension(String newExtension) {
                m_extension = newExtension;
            }

            public Integer getSize() {
                return m_size;
            }

            public void setSize(Integer newSize) {
                m_size = newSize;
            }
        }
    }

    public static class BCC extends AbstractValueFieldData<Set<String>> {
        private static final long serialVersionUID = 1L;
    }

    public static class CC extends AbstractValueFieldData<Set<String>> {
        private static final long serialVersionUID = 1L;
    }

    public static class ClientIdProperty extends AbstractPropertyData<Integer> {
        private static final long serialVersionUID = 1L;
    }

    public static class EmailIdProperty extends AbstractPropertyData<Integer> {
        private static final long serialVersionUID = 1L;
    }

    public static class Message extends AbstractValueFieldData<String> {
        private static final long serialVersionUID = 1L;
    }

    public static class Receiver extends AbstractValueFieldData<Set<String>> {
        private static final long serialVersionUID = 1L;
    }

    public static class Sender extends AbstractValueFieldData<String> {
        private static final long serialVersionUID = 1L;
    }

    public static class Subject extends AbstractValueFieldData<String> {
        private static final long serialVersionUID = 1L;
    }
}
