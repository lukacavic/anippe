package com.velebit.anippe.shared.tasks;

import org.eclipse.scout.rt.platform.resource.BinaryResource;
import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

import javax.annotation.Generated;
import java.util.Date;
import java.util.Set;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "com.velebit.anippe.client.tasks.TaskForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class TaskFormData extends AbstractFormData {
    private static final long serialVersionUID = 1L;

    public AssignedUsersBox getAssignedUsersBox() {
        return getFieldByClass(AssignedUsersBox.class);
    }

    public AttachmentsTable getAttachmentsTable() {
        return getFieldByClass(AttachmentsTable.class);
    }

    public DeadlineAt getDeadlineAt() {
        return getFieldByClass(DeadlineAt.class);
    }

    public Description getDescription() {
        return getFieldByClass(Description.class);
    }

    public File getFile() {
        return getFieldByClass(File.class);
    }

    public FollowersBox getFollowersBox() {
        return getFieldByClass(FollowersBox.class);
    }

    public Name getName() {
        return getFieldByClass(Name.class);
    }

    public Priority getPriority() {
        return getFieldByClass(Priority.class);
    }

    public Project getProject() {
        return getFieldByClass(Project.class);
    }

    public Related getRelated() {
        return getFieldByClass(Related.class);
    }

    /**
     * access method for property RelatedId.
     */
    public Integer getRelatedId() {
        return getRelatedIdProperty().getValue();
    }

    /**
     * access method for property RelatedId.
     */
    public void setRelatedId(Integer relatedId) {
        getRelatedIdProperty().setValue(relatedId);
    }

    public RelatedIdProperty getRelatedIdProperty() {
        return getPropertyByClass(RelatedIdProperty.class);
    }

    /**
     * access method for property RelatedType.
     */
    public Integer getRelatedType() {
        return getRelatedTypeProperty().getValue();
    }

    /**
     * access method for property RelatedType.
     */
    public void setRelatedType(Integer relatedType) {
        getRelatedTypeProperty().setValue(relatedType);
    }

    public RelatedTypeProperty getRelatedTypeProperty() {
        return getPropertyByClass(RelatedTypeProperty.class);
    }

    public StartAt getStartAt() {
        return getFieldByClass(StartAt.class);
    }

    /**
     * access method for property StatusId.
     */
    public Integer getStatusId() {
        return getStatusIdProperty().getValue();
    }

    /**
     * access method for property StatusId.
     */
    public void setStatusId(Integer statusId) {
        getStatusIdProperty().setValue(statusId);
    }

    public StatusIdProperty getStatusIdProperty() {
        return getPropertyByClass(StatusIdProperty.class);
    }

    public Tags getTags() {
        return getFieldByClass(Tags.class);
    }

    /**
     * access method for property TaskId.
     */
    public Integer getTaskId() {
        return getTaskIdProperty().getValue();
    }

    /**
     * access method for property TaskId.
     */
    public void setTaskId(Integer taskId) {
        getTaskIdProperty().setValue(taskId);
    }

    public TaskIdProperty getTaskIdProperty() {
        return getPropertyByClass(TaskIdProperty.class);
    }

    public static class AssignedUsersBox extends AbstractValueFieldData<Set<Long>> {
        private static final long serialVersionUID = 1L;
    }

    public static class AttachmentsTable extends AbstractTableFieldBeanData {
        private static final long serialVersionUID = 1L;

        @Override
        public AttachmentsTableRowData addRow() {
            return (AttachmentsTableRowData) super.addRow();
        }

        @Override
        public AttachmentsTableRowData addRow(int rowState) {
            return (AttachmentsTableRowData) super.addRow(rowState);
        }

        @Override
        public AttachmentsTableRowData createRow() {
            return new AttachmentsTableRowData();
        }

        @Override
        public Class<? extends AbstractTableRowData> getRowType() {
            return AttachmentsTableRowData.class;
        }

        @Override
        public AttachmentsTableRowData[] getRows() {
            return (AttachmentsTableRowData[]) super.getRows();
        }

        @Override
        public AttachmentsTableRowData rowAt(int index) {
            return (AttachmentsTableRowData) super.rowAt(index);
        }

        public void setRows(AttachmentsTableRowData[] rows) {
            super.setRows(rows);
        }

        public static class AttachmentsTableRowData extends AbstractTableRowData {
            private static final long serialVersionUID = 1L;
        }
    }

    public static class DeadlineAt extends AbstractValueFieldData<Date> {
        private static final long serialVersionUID = 1L;
    }

    public static class Description extends AbstractValueFieldData<String> {
        private static final long serialVersionUID = 1L;
    }

    public static class File extends AbstractValueFieldData<BinaryResource> {
        private static final long serialVersionUID = 1L;
    }

    public static class FollowersBox extends AbstractValueFieldData<Set<Long>> {
        private static final long serialVersionUID = 1L;
    }

    public static class Name extends AbstractValueFieldData<String> {
        private static final long serialVersionUID = 1L;
    }

    public static class Priority extends AbstractValueFieldData<Integer> {
        private static final long serialVersionUID = 1L;
    }

    public static class Project extends AbstractValueFieldData<Long> {
        private static final long serialVersionUID = 1L;
    }

    public static class Related extends AbstractValueFieldData<Integer> {
        private static final long serialVersionUID = 1L;
    }

    public static class RelatedIdProperty extends AbstractPropertyData<Integer> {
        private static final long serialVersionUID = 1L;
    }

    public static class RelatedTypeProperty extends AbstractPropertyData<Integer> {
        private static final long serialVersionUID = 1L;
    }

    public static class StartAt extends AbstractValueFieldData<Date> {
        private static final long serialVersionUID = 1L;
    }

    public static class StatusIdProperty extends AbstractPropertyData<Integer> {
        private static final long serialVersionUID = 1L;
    }

    public static class Tags extends AbstractValueFieldData<Set<String>> {
        private static final long serialVersionUID = 1L;
    }

    public static class TaskIdProperty extends AbstractPropertyData<Integer> {
        private static final long serialVersionUID = 1L;
    }
}
